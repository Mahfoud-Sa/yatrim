name: Build APK and Publish Release

on:
  push:
    tags:
      - 'v*' # Trigger on new version tags (e.g., v1.0.0)
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: 'stable'

      - name: Get Flutter packages
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Find APK file
        id: find_apk
        run: |
          APK_PATH=$(find build -name "*.apk" | head -n 1)
          if [ -f "$APK_PATH" ]; then
            echo "APK_PATH=$APK_PATH" >> $GITHUB_OUTPUT
          else
            echo "Could not find APK file" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ steps.find_apk.outputs.APK_PATH }}

  publish-release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code # <--- ADDED THIS STEP
        uses: actions/checkout@v4

      - name: Get version from pubspec.yaml
        id: version
        run: |
          FULL_VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d '"' | tr -d "'")
          BASE_VERSION=$(echo "$FULL_VERSION" | cut -d'+' -f1)
          echo "version=$BASE_VERSION" >> $GITHUB_OUTPUT

      - name: Create tag name
        id: tag_name
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Manual release format: v1.0.5m13
            echo "tag_name=v${{ steps.version.outputs.version }}m${{ github.run_number }}" >> $GITHUB_OUTPUT
          else
            # Automatic release format: v1.0.5
            echo "tag_name=v${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Get app name from pubspec.yaml
        id: app_name
        run: |
          APP_NAME=$(grep '^name:' pubspec.yaml | awk '{print $2}' | tr -d '"' | tr -d "'")
          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_name.outputs.tag_name }}
          name: ${{ steps.app_name.outputs.app_name }} ${{ steps.tag_name.outputs.tag_name }}
          body: "Automated release for ${{ steps.app_name.outputs.app_name }} version ${{ steps.tag_name.outputs.tag_name }}"
          files: artifacts/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

